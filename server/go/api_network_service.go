/*
 * netConfD API
 *
 * Network Configurator service
 *
 * API version: 0.2.0
 * Contact: support@athonet.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"

)

// NewNetworkApiService creates a default api service
func NewNetworkApiService() NetworkApiServicer {
	return &NetworkApiService{}
}

// ConfigDHCPCreate - Create DHCP 
func (s *NetworkApiService) ConfigDHCPCreate(ctx context.Context, dhcp Dhcp) (ImplResponse, error) {
	// TODO - update ConfigDHCPCreate with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	//return Response(201, nil),nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return s.ConfigDHCPCreate_Impl(ctx, dhcp)
}

// ConfigDHCPDel - Delete DHCP 
func (s *NetworkApiService) ConfigDHCPDel(ctx context.Context, ifname string) (ImplResponse, error) {
	// TODO - update ConfigDHCPDel with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return s.ConfigDHCPDel_Impl(ctx, ifname)
}

// ConfigDHCPGet - Get DHCP 
func (s *NetworkApiService) ConfigDHCPGet(ctx context.Context, ifname string) (ImplResponse, error) {
	// TODO - update ConfigDHCPGet with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return s.ConfigDHCPGet_Impl(ctx, ifname)
}

// ConfigDHCPsGet - Get All DHCP 
func (s *NetworkApiService) ConfigDHCPsGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ConfigDHCPsGet with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Dhcp{}) or use other options such as http.Ok ...
	//return Response(200, []Dhcp{}), nil

	return s.ConfigDHCPsGet_Impl(ctx)
}

// ConfigDNSCreate - Create DNS 
func (s *NetworkApiService) ConfigDNSCreate(ctx context.Context, dns Dns) (ImplResponse, error) {
	// TODO - update ConfigDNSCreate with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	//return Response(201, nil),nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return s.ConfigDNSCreate_Impl(ctx, dns)
}

// ConfigDNSDel - Delete DNS 
func (s *NetworkApiService) ConfigDNSDel(ctx context.Context, dnsid Dnsid) (ImplResponse, error) {
	// TODO - update ConfigDNSDel with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return s.ConfigDNSDel_Impl(ctx, dnsid)
}

// ConfigDNSGet - Get DNS 
func (s *NetworkApiService) ConfigDNSGet(ctx context.Context, dnsid Dnsid) (ImplResponse, error) {
	// TODO - update ConfigDNSGet with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return s.ConfigDNSGet_Impl(ctx, dnsid)
}

// ConfigDNSsGet - Get All DNS config 
func (s *NetworkApiService) ConfigDNSsGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ConfigDNSsGet with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Dns{}) or use other options such as http.Ok ...
	//return Response(200, []Dns{}), nil

	return s.ConfigDNSsGet_Impl(ctx)
}

// ConfigLinkCreate - Create New Link 
func (s *NetworkApiService) ConfigLinkCreate(ctx context.Context, link Link) (ImplResponse, error) {
	// TODO - update ConfigLinkCreate with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	//return Response(201, nil),nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return s.ConfigLinkCreate_Impl(ctx, link)
}

// ConfigLinkDel - Delete Link 
func (s *NetworkApiService) ConfigLinkDel(ctx context.Context, ifname string) (ImplResponse, error) {
	// TODO - update ConfigLinkDel with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return s.ConfigLinkDel_Impl(ctx, ifname)
}

// ConfigLinkGet - Get Link 
func (s *NetworkApiService) ConfigLinkGet(ctx context.Context, ifname string) (ImplResponse, error) {
	// TODO - update ConfigLinkGet with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return s.ConfigLinkGet_Impl(ctx, ifname)
}

// ConfigLinksGet - Get All Links 
func (s *NetworkApiService) ConfigLinksGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ConfigLinksGet with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Link{}) or use other options such as http.Ok ...
	//return Response(200, []Link{}), nil

	return s.ConfigLinksGet_Impl(ctx)
}

// ConfigRouteCreate - Create New Route 
func (s *NetworkApiService) ConfigRouteCreate(ctx context.Context, route Route) (ImplResponse, error) {
	// TODO - update ConfigRouteCreate with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, string{}) or use other options such as http.Ok ...
	//return Response(201, string{}), nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return s.ConfigRouteCreate_Impl(ctx, route)
}

// ConfigRouteDel - Delete Route 
func (s *NetworkApiService) ConfigRouteDel(ctx context.Context, routeid string) (ImplResponse, error) {
	// TODO - update ConfigRouteDel with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return s.ConfigRouteDel_Impl(ctx, routeid)
}

// ConfigRouteGet - Get Route 
func (s *NetworkApiService) ConfigRouteGet(ctx context.Context, routeid string) (ImplResponse, error) {
	// TODO - update ConfigRouteGet with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return s.ConfigRouteGet_Impl(ctx, routeid)
}

// ConfigRoutesGet - Get All Routes 
func (s *NetworkApiService) ConfigRoutesGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ConfigRoutesGet with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Route{}) or use other options such as http.Ok ...
	//return Response(200, []Route{}), nil

	return s.ConfigRoutesGet_Impl(ctx)
}

// ConfigUnmanagedCreate - Create Unmanaged 
func (s *NetworkApiService) ConfigUnmanagedCreate(ctx context.Context, unmanaged Unmanaged) (ImplResponse, error) {
	// TODO - update ConfigUnmanagedCreate with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	//return Response(201, nil),nil

	//TODO: Uncomment the next line to return response Response(409, {}) or use other options such as http.Ok ...
	//return Response(409, nil),nil

	//TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	//return Response(400, nil),nil

	return s.ConfigUnmanagedCreate_Impl(ctx, unmanaged)
}

// ConfigUnmanagedDel - Delete Unmanaged 
func (s *NetworkApiService) ConfigUnmanagedDel(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update ConfigUnmanagedDel with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return s.ConfigUnmanagedDel_Impl(ctx, id)
}

// ConfigUnmanagedGet - Get Unmanaged 
func (s *NetworkApiService) ConfigUnmanagedGet(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update ConfigUnmanagedGet with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	//return Response(404, nil),nil

	return s.ConfigUnmanagedGet_Impl(ctx, id)
}

// ConfigUnmanagedListGet - Get All Unmanaged 
func (s *NetworkApiService) ConfigUnmanagedListGet(ctx context.Context) (ImplResponse, error) {
	// TODO - update ConfigUnmanagedListGet with the required logic for this service method.
	// Add api_network_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Unmanaged{}) or use other options such as http.Ok ...
	//return Response(200, []Unmanaged{}), nil

	return s.ConfigUnmanagedListGet_Impl(ctx)
}

