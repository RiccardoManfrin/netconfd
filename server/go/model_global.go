/*
 * netConfD API
 *
 * Network Configurator service
 *
 * API version: 0.1.0
 * Contact: support@athonet.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Global Application generic global config
type Global struct {
	LogLev *string `json:"log_lev,omitempty"`
	Mgmt *GlobalMgmt `json:"mgmt,omitempty"`
}

// NewGlobal instantiates a new Global object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobal() *Global {
	this := Global{}
	return &this
}

// NewGlobalWithDefaults instantiates a new Global object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalWithDefaults() *Global {
	this := Global{}
	return &this
}

// GetLogLev returns the LogLev field value if set, zero value otherwise.
func (o *Global) GetLogLev() string {
	if o == nil || o.LogLev == nil {
		var ret string
		return ret
	}
	return *o.LogLev
}

// GetLogLevOk returns a tuple with the LogLev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetLogLevOk() (*string, bool) {
	if o == nil || o.LogLev == nil {
		return nil, false
	}
	return o.LogLev, true
}

// HasLogLev returns a boolean if a field has been set.
func (o *Global) HasLogLev() bool {
	if o != nil && o.LogLev != nil {
		return true
	}

	return false
}

// SetLogLev gets a reference to the given string and assigns it to the LogLev field.
func (o *Global) SetLogLev(v string) {
	o.LogLev = &v
}

// GetMgmt returns the Mgmt field value if set, zero value otherwise.
func (o *Global) GetMgmt() GlobalMgmt {
	if o == nil || o.Mgmt == nil {
		var ret GlobalMgmt
		return ret
	}
	return *o.Mgmt
}

// GetMgmtOk returns a tuple with the Mgmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Global) GetMgmtOk() (*GlobalMgmt, bool) {
	if o == nil || o.Mgmt == nil {
		return nil, false
	}
	return o.Mgmt, true
}

// HasMgmt returns a boolean if a field has been set.
func (o *Global) HasMgmt() bool {
	if o != nil && o.Mgmt != nil {
		return true
	}

	return false
}

// SetMgmt gets a reference to the given GlobalMgmt and assigns it to the Mgmt field.
func (o *Global) SetMgmt(v GlobalMgmt) {
	o.Mgmt = &v
}

func (o Global) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LogLev != nil {
		toSerialize["log_lev"] = o.LogLev
	}
	if o.Mgmt != nil {
		toSerialize["mgmt"] = o.Mgmt
	}
	return json.Marshal(toSerialize)
}

type NullableGlobal struct {
	value *Global
	isSet bool
}

func (v NullableGlobal) Get() *Global {
	return v.value
}

func (v *NullableGlobal) Set(val *Global) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobal) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobal(val *Global) *NullableGlobal {
	return &NullableGlobal{value: val, isSet: true}
}

func (v NullableGlobal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


