openapi: 3.0.0
info:
  contact:
    email: support@athonet.com
  description: Network Configurator service
  title: netConfD API
  version: 0.1.0
servers:
- url: /api/1
tags:
- description: System level APIs (e.g. logging, etc..)
  name: System
- description: Network config APIs
  name: Network
- description: Calls related to Processes/Services management
  name: Route
paths:
  /config:
    get:
      description: |
        Configures and enforces a new live network configuration
      operationId: ConfigGet
      responses:
        "200":
          description: Successful alignment
      summary: |
        Configures and enforces a new live network configuration
      tags:
      - Network
    post:
      description: |
        Configures and enforces a new live network configuration
      operationId: ConfigPut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config'
        description: Full Config
        required: true
      responses:
        "200":
          description: Successful alignment
      summary: |
        Configures and enforces a new live network configuration
      tags:
      - Network
  /config/link:
    post:
      description: |
        Configures and brings up a link layer interface
      operationId: ConfigLinkPut
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/link'
        description: Full Config
        required: true
      responses:
        "200":
          description: Successful alignment
      summary: |
        Configures and brings up a link layer interface
      tags:
      - Network
  /config/link/{ifname}:
    delete:
      description: |
        Brings down and delete a link layer interface
      parameters:
      - explode: false
        in: path
        name: ifname
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful alignment
      summary: |
        Brings down and delete a link layer interface
      tags:
      - Network
components:
  schemas:
    ipv4:
      format: ipv4
      type: string
    ipv6:
      format: ipv6
      type: string
    ip:
      oneOf:
      - $ref: '#/components/schemas/ipv4'
      - $ref: '#/components/schemas/ipv6'
    default:
      description: This is equivalent to 0.0.0.0/0 or ::/0
      enum:
      - default
      type: string
    ifname:
      description: |
        Interface name
      type: string
    scope:
      description: scope of the object (link or global)
      enum:
      - link
      - global
      type: string
    config:
      properties:
        global:
          type: object
        namespaces:
          items:
            $ref: '#/components/schemas/namespace'
          type: array
      required:
      - global
      - links
      type: object
    namespace:
      properties:
        name:
          description: |
            Namespace name; null or missing param identifies default (PID 1) namespace
          nullable: true
          type: string
        links:
          description: Series of links layer interfaces to configure within the namespace
          items:
            $ref: '#/components/schemas/link'
          type: array
        routes:
          description: Namespace routes
          items:
            $ref: '#/components/schemas/route'
          type: array
      type: object
    route_flags:
      type: string
    route:
      properties:
        dst:
          oneOf:
          - $ref: '#/components/schemas/ip'
          - $ref: '#/components/schemas/default'
        gateway:
          $ref: '#/components/schemas/ip'
        dev:
          description: |
            Interface name
          type: string
        protocol:
          type: string
        metric:
          type: integer
        scope:
          $ref: '#/components/schemas/scope'
        prefsrc:
          $ref: '#/components/schemas/ip'
        flags:
          description: Route flags
          items:
            $ref: '#/components/schemas/route_flags'
          type: array
      type: object
    link:
      properties:
        ifindex:
          description: |
            Inteface index ID
          type: integer
        ifname:
          description: |
            Interface name
          type: string
        mtu:
          description: |
            Maximum Transfer Unit value
          type: integer
        linkinfo:
          $ref: '#/components/schemas/link_linkinfo'
        link_type:
          enum:
          - ether
          - loopback
          - ppp
          type: string
        address:
          type: string
        addr_info:
          items:
            $ref: '#/components/schemas/link_addr_info'
          type: array
      required:
      - ifname
      - link_type
      type: object
    link_linkinfo:
      description: |
        Additional link info attributes
      properties:
        info_kind:
          description: "Type of link layer interface. Supported Types:\n  * `dummy`\
            \ - Dummy link type interface for binding intenal services\n  * `bridge`\
            \ - Link layer virtual switch type interface\n  * `bond` - Bond type interface\
            \ letting two interfaces be seen as one\n  * `vlan` - Virtual LAN (TAG\
            \ ID based) interface\n  * `veth` - Virtual ethernet (with virtual MAC\
            \ and IP address)\n  * `macvlan` - Direct virtual eth interface connected\
            \ to the physical interface, \n    with owned mac address\n  * `ipvlan`\
            \ - Direct virtual eth interface connected to the physical interface.\n\
            \    Physical interface MAC address is reused. L2 type directly connects\
            \ the lan to \n    the host phyisical device. L3 type adds a routing layer\
            \ in between.\n"
          enum:
          - dummy
          - bridge
          - bond
          - vlan
          - veth
          - macvlan
          - ipvlan
          type: string
      type: object
    link_addr_info:
      properties:
        local:
          $ref: '#/components/schemas/ip'
        prefixlen:
          type: integer
        broadcast:
          type: string
      type: object
