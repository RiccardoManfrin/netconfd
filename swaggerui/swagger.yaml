openapi: 3.0.0
info:
  description: Network Configurator service
  version: 0.1.0
  title: netConfD API
  contact:
    email: support@athonet.com
servers:
  - url: /api/1
tags:
  - name: System
    description: System level APIs (e.g. logging, etc..)
  - name: Network
    description: Network config APIs
  - name: Route
    description: Calls related to Processes/Services management
paths:
  /config:
    post:
      tags:
        - Network
      operationId: ConfigPut
      summary: |
        Configures and enforces a new live network configuration
      description: |
        Configures and enforces a new live network configuration
      requestBody:
        description: Full Config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config'
      responses:
        '200':
          description: Successful alignment
    get:
      tags:
        - Network
      operationId: ConfigGet
      summary: |
        Configures and enforces a new live network configuration
      description: |
        Configures and enforces a new live network configuration
      responses:
        '200':
          description: Successful alignment
  /config/link:
    post:
      tags:
        - Network
      operationId: ConfigLinkPut
      summary: |
        Configures and brings up a link layer interface
      description: |
        Configures and brings up a link layer interface
      requestBody:
        description: Full Config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/link'
      responses:
        '200':
          description: Successful alignment
  /config/link/{ifname}:
    delete:
      tags:
        - Network
      summary: |
        Brings down and delete a link layer interface
      description: |
        Brings down and delete a link layer interface
      parameters:
      - in: path
        name: ifname
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful alignment
components:
  schemas:
    ipv4:
      type: string
      format: ipv4
    ipv6:
      type: string
      format: ipv6
    ip:
      oneOf:
        - $ref: '#/components/schemas/ipv4'
        - $ref: '#/components/schemas/ipv6'
    config:
      type: object
      required:
        - global
        - links
      properties:
        global:
          type: object
        namespaces:
          type: array
          items:
            $ref: '#/components/schemas/namespace'
    namespace:
      type: object
      properties:
        name:
          description: |
            Namespace name; null or missing param identifies default (PID 1) namespace
          type: string
          nullable: true
        links:
          type: array
          description: 
            Series of links layer interfaces to configure within the namespace
          items:
            $ref: '#/components/schemas/link'
    link:
      type: object
      properties:
        ifindex:
          description: |
            Inteface index ID
          type: integer
        ifname:
          description: |
            Interface name
          type: string
        #flags:
        #  type: array
        #  items:
        #    type: string
        mtu:
          description: |
            Maximum Transfer Unit value
          type: integer
        #promiscuity:
        #  type: integer
        linkinfo:
          type: object
          description: |
            Additional link info attributes
          properties:
            info_kind:
              type: string
              description: >
                Type of link layer interface.
                Supported Types:
                  * `dummy` - Dummy link type interface for binding intenal services
                  * `bridge` - Link layer virtual switch type interface
                  * `bond` - Bond type interface letting two interfaces be seen as one
                  * `vlan` - Virtual LAN interface
              enum:
                - dummy
                - bridge
                - bond
                #- ppp
                - vlan
        #qdisc:
        #  type: string
        #operstate:
        #  type: string
        #group:
        #  type: string
        #txqlen:
        #  type: integer
        link_type:
          type: string
          enum:
            - ether
            - loopback
            - ppp
        address:
          type: string
        #broadcast:
        #  type: string
        addr_info:
          type: array
          items:
            type: object
            properties:
              #family:
              #  type: string
              local:
                $ref: '#/components/schemas/ip'
              prefixlen:
                type: integer
              broadcast:
                type: string
              #scope:
              #  type: string
              #dynamic:
              #  type: boolean
              #noprefixroute:
              #  type: boolean
              #label:
              #  type: string
              #valid_life_time:
              #  type: integer
              #preferred_life_time:
              #  type: integer
            #required:
              #- family
              #- local
              #- prefixlen
              #- broadcast
              #- scope
              #- dynamic
              #- noprefixroute
              #- label
              #- valid_life_time
              #- preferred_life_time
      required:
        #- ifindex
        - ifname
        #- flags
        #- mtu
        #- qdisc
        #- operstate
        #- group
        #- txqlen
        - link_type
        #- address
        #- broadcast
        #- addr_info
  
