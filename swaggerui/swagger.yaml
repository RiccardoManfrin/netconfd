openapi: 3.0.0
info:
  description: Network Configurator service
  version: 0.1.0
  title: netConfD API
  contact:
    email: support@athonet.com
servers:
  - url: /api/1
tags:
  - name: System
    description: System level APIs (e.g. logging, etc..)
  - name: Network
    description: Network config APIs
  - name: Route
    description: Calls related to Processes/Services management
paths:
  /config:
    post:
      tags:
        - Network
      operationId: ConfigSet
      summary: |
        Configures and enforces a new live network configuration
      description: |
        Configures and enforces a new live network configuration
      requestBody:
        description: Full Config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/config'
      responses:
        '200':
          description: Successful alignment
    get:
      tags:
        - Network
      operationId: ConfigGet
      summary: |
        Configures and enforces a new live network configuration
      description: |
        Configures and enforces a new live network configuration
      responses:
        '200':
          description: Successful alignment
  /config/links:
    post:
      tags:
        - Network
      operationId: ConfigLinkSet
      summary: |
        Configures and brings up a link layer interface
      description: |
        Configures and brings up a link layer interface.
        If the link exists return an error
      requestBody:
        description: Link Config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/link'
      responses:
        '200':
          description: Successful creation
        '409':
          description: 
            Resource already exists, or request is incompatible with
            current network state
        "400":
          description:
            Resource config is semantically or syntactically incorrect
          
  /config/links/{ifname}:
    get:
      tags:
        - Network
      operationId: ConfigLinkGet
      summary: |
        Retrieve link layer interface information
      description: |
        Retrieve link layer interface information
      parameters:
      - in: path
        name: ifname
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful get
        "404":
          description: Not found
    delete:
      tags:
        - Network
      operationId: ConfigLinkDel
      summary: |
        Brings down and delete a link layer interface
      description: |
        Brings down and delete a link layer interface
      parameters:
      - in: path
        name: ifname
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful delete
        "404":
          description: Not found
  /config/routes:
    post:
      tags:
        - Network
      operationId: ConfigRouteSet
      summary: |
        Configures a route
      description: |
        Configures a L3 route on the main routing table
      requestBody:
        description: Route Config
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/route'
      responses:
        '200':
          description: Successful creation
        '409':
          description: 
            Resource already exists, or request is incompatible with
            current network state
        "400":
          description:
            Resource config is semantically or syntactically incorrect
          
  /config/routes/{routeid}:
    get:
      tags:
        - Network
      operationId: ConfigRouteGet
      summary: |
        Get a L3 route details
      description: |
        Get a L3 route details
      parameters:
      - in: path
        name: routeid
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful get
        "404":
          description: Not found
    delete:
      tags:
        - Network
      operationId: ConfigRouteDel
      summary: |
        Brings down and delete an L3 IP route
      description: |
        Brings down and delete an L3 IP route
      parameters:
      - in: path
        name: routeid
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful delete
        "404":
          description: Not found
components:
  schemas:
    ipv4:
      type: string
      format: ipv4
    ipv6:
      type: string
      format: ipv6
    ip:
      example: "10.1.2.3"
      oneOf:
        - $ref: '#/components/schemas/ipv4'
        - $ref: '#/components/schemas/ipv6'
    default:
      type: string
      description: "This is equivalent to 0.0.0.0/0 or ::/0"
      enum: 
        - "default"
    ifname:
      example: "dummy0"
      description: |
        Interface name
      type: string
    scope:
      type: string
      description: scope of the object (link or global)
      enum:
        - "link"
        - "global"
    route_flags:
      type: string
    route_dst:
      oneOf:
        - $ref: '#/components/schemas/ip'
        - $ref: '#/components/schemas/default'
    config:
      type: object
      required:
        - global
        - links
      properties:
        global:
          type: object
    #    namespaces:
    #      type: array
    #      items:
    #        $ref: '#/components/schemas/namespace'
        host_network:
          $ref: '#/components/schemas/network'
    #namespace:
    #  type: object
    #  properties:
    #    name:
    #      description: |
    #        Namespace name; null or missing param identifies default (PID 1) namespace
    #      type: string
    #      nullable: true
    #    network:
    #      $ref: '#/components/schemas/network'
    network:
      type: object
      properties:
        links:
          type: array
          description: 
            Series of links layer interfaces to configure within the namespace
          items:
            $ref: '#/components/schemas/link'
        routes:
          type: array
          description:
            Namespace routes
          items:
            $ref: '#/components/schemas/route'
    route:
      type: object
      properties:
        dst:
          $ref: '#/components/schemas/route_dst'
        gateway:
          $ref: '#/components/schemas/ip'
        dev:
          $ref: '#/components/schemas/ifname'
        protocol:
          type: string
        metric:
          type: integer
        scope: 
          $ref: '#/components/schemas/scope'
        prefsrc:
          $ref: '#/components/schemas/ip'
        flags:
          type: array
          description:
            Route flags
          items:
            $ref: '#/components/schemas/route_flags'
    link:
      type: object
      properties:
        ifindex:
          description: |
            Inteface index ID
          type: integer
        ifname:
          $ref: '#/components/schemas/ifname'
        #flags:
        #  type: array
        #  items:
        #    type: string
        mtu:
          description: |
            Maximum Transfer Unit value
          type: integer
        #promiscuity:
        #  type: integer
        linkinfo:
          type: object
          description: |
            Additional link info attributes
          properties:
            info_kind:
              type: string
              description: >
                Type of link layer interface.
                Supported Types:
                  * `dummy` - Dummy link type interface for binding intenal services
                  * `bridge` - Link layer virtual switch type interface
                  * `bond` - Bond type interface letting two interfaces be seen as one
                  * `vlan` - Virtual LAN (TAG ID based) interface
                  * `veth` - Virtual ethernet (with virtual MAC and IP address)
                  * `macvlan` - Direct virtual eth interface connected to the physical interface, 
                    with owned mac address
                  * `ipvlan` - Direct virtual eth interface connected to the physical interface.
                    Physical interface MAC address is reused. L2 type directly connects the lan to 
                    the host phyisical device. L3 type adds a routing layer in between.
              enum:
                - dummy
                - bridge
                - bond
                - vlan
                - veth
                - macvlan
                - ipvlan
        #qdisc:
        #  type: string
        #operstate:
        #  type: string
        #group:
        #  type: string
        #txqlen:
        #  type: integer
        link_type:
          type: string
          enum:
            - ether
            - loopback
            - ppp
        address:
          type: string
        #broadcast:
        #  type: string
        addr_info:
          type: array
          items:
            type: object
            properties:
              #family:
              #  type: string
              local:
                $ref: '#/components/schemas/ip'
              prefixlen:
                type: integer
              broadcast:
                type: string
              #scope:
              #  $ref: '#/components/schemas/scope'
              #dynamic:
              #  type: boolean
              #noprefixroute:
              #  type: boolean
              #label:
              #  type: string
              #valid_life_time:
              #  type: integer
              #preferred_life_time:
              #  type: integer
            #required:
              #- family
              #- local
              #- prefixlen
              #- broadcast
              #- scope
              #- dynamic
              #- noprefixroute
              #- label
              #- valid_life_time
              #- preferred_life_time
      required:
        #- ifindex
        - ifname
        #- flags
        #- mtu
        #- qdisc
        #- operstate
        #- group
        #- txqlen
        - link_type
        #- address
        #- broadcast
        #- addr_info
  
