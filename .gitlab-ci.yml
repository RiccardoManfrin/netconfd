stages:
    - build
    - scan_push
    - publish_changelog

variables:
  DOCKER_BUILDKIT: 1

build:
  stage: build
  image: docker:stable
  tags:
  - docker
  before_script:
  - apk add --no-cache git openssh-client curl
  - ssh-agent > agent_env && source agent_env && ssh-add ~/.ssh/id_rsa
  - git submodule update
  - git archive --format=tar.gz --output src.tar.gz HEAD
  script:
  - docker build --pull --iidfile=image_id.txt --ssh default
    --build-arg CI_PROJECT_PATH=$CI_PROJECT_PATH
    --build-arg CI_PROJECT_NAME=$CI_PROJECT_NAME
    -f Dockerfile 
    -t nc:dev ./
  - docker save $(cat image_id.txt) -o ./image.tar
  artifacts:
    expire_in: 1 hour
    paths:
    - ./image.tar
    - ./image_id.txt

uploadspec:
  stage: build
  image: docker:stable
  tags:
  - docker
  before_script:
  - apk add --no-cache git openssh-client curl
  script:
  - tar cvzf archive.tar.gz  -C swaggerui/ openapi.yaml
  - export OPENAPI_VER=`cat swaggerui/openapi.yaml | grep  "version:" |awk '{print $2}'`
  - curl -X PUT -F 'bundle=@archive.tar.gz' http://srv-buildrepo.lan.athonet.com/api/v1/products/5g/components/netconfd/openapi/$OPENAPI_VER


scan_push:
    stage: scan_push
    image: docker:stable
    tags:
        - docker
    before_script:
        - apk add --no-cache openssh-client bash curl jq
    script:
        - curl -s http://srv-buildrepo/scripts/test_autoscan.sh | bash -s ./Dockerfile $(cat image_id.txt)
    artifacts:
        when: always
        expire_in: 1 week
        paths:
            - ./image_report.json

changelog.publish:
    stage: publish_changelog
    image: python:3.6
    before_script:
        - pip install requests
    script:
        - if [[ x$CI_COMMIT_TAG != x ]]; then curl http://srv-buildrepo/scripts/changelog_generator.py | python; else echo "No Tag No Changelog"; fi;
    tags:
        - docker
    allow_failure: true
