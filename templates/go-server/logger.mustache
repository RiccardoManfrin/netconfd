{{>partial_header}}
package {{packageName}}

import (
	"net/http"
	"time"
	"io/ioutil"
	"bytes"

	"gitlab.lan.athonet.com/riccardo.manfrin/netconfd/logger"
)

func Logger(inner http.Handler, name string) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		start := time.Now()

		inner.ServeHTTP(w, r)


		body, err := ioutil.ReadAll(r.Body)
		r.Body = ioutil.NopCloser(bytes.NewBuffer(body))
		if err != nil {
			logger.Log.Warning("Failed to process request body")
			return
		}
		if r.Method != "GET" {
			logger.Log.Notice("T:" + time.Since(start).String() + " - API:" + r.Method + ":" + r.URL.Path + ":" + string(body))
		} else {
			logger.Log.Info("T:" + time.Since(start).String() + " - API:" + r.Method + ":" + r.URL.Path + ":" + string(body))
		}
	})
}
